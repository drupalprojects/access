<?php

/**
 * @file
 * The ACK menu module.
 */

/**
 * Implements hook_access_info().
 */
function ack_menu_access_info() {
  // Declare support for controlling access to menu links.
  $info['menu_link'] = array('label' => t('Menu link'));
  return $info;
}

/**
 * Implements hook_access_handler_info().
 */
function ack_menu_access_handler_info() {
  // Handler to map menu links to realms; should work for all scheme types.
  $info['ACKMenuMap'] = array(
    'label' => t('Map menu links to realms'),
    'scheme types' => array_keys(access_scheme_info()),
    'object types' => array('menu_link'),
  );
  return $info;
}

/**
 * Implements hook_permission().
 */
function ack_menu_permission() {
  $scheme_names = access_object_schemes('menu_link', TRUE);
  $t_args = array('%schemes' => implode(', ', $scheme_names));
  return array(
    'ack manage menu links' => array(
      'title' => t('Manage the menu links in assigned realms'),
      'description' => t('This permission only applies to the following access schemes: %schemes.', $t_args),
    ),
    'administer ack_menu' => array(
      'title' => t('Map menu links to access realms'),
    ),
  );
}

/**
 * Implements hook_menu_alter().
 */
function ack_menu_menu_alter(&$items) {
  // Override access to the menu link admin pages.
  foreach (array('edit', 'reset', 'delete') as $op) {
    $items['admin/structure/menu/item/%menu_link/' . $op]['access callback'] = 'ack_menu_link_access';
    $items['admin/structure/menu/item/%menu_link/' . $op]['access arguments'] = array(4, $op);
  }
}

/**
 * Checks menu link access; used as the menu access callback for link admin.
 *
 * @param $menu_link
 *   A menu link object on which to perform the access check.
 * @param $op
 *   The operation to be performed.  Possible values:
 *   - "edit"
 *   - "reset"
 *   - "delete"
 * @param $account
 *   (optional) The user object on which to perform the access check operation.
 *   Defaults to the currently logged-in user.
 *
 * @return
 *   Boolean indicating whether the operation is allowed.
 */
function ack_menu_link_access($menu_link, $op, $account = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }

  // The global 'administer menu' permission trumps any ACK permissions.
  if (user_access('administer menu', $account)) {
    return TRUE;
  }

  // Check realm permissions.
  switch ($op) {
    case 'edit':
    case 'reset':
    case 'delete':
      return access_user_object_access('ack manage menu links', 'menu_link', $menu_link, $account);
  }

  return FALSE;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function ack_menu_form_node_form_alter(&$form, &$form_state, $form_id) {
  // @todo Filter the menu parent selector.
}

// @todo Still need to build the admin UI for mapping menu links.
// @todo Need to provide management UI for accessible links, so they can be managed without access to the admin screens.
