<?php
/**
 * @file
 * The access control kit module.
 */

/**
 * Implements hook_entity_info().
 */
function access_entity_info() {
  // Access containers.
  $types['access_container'] = array(
    'label' => t('Access container'),
    'base table' => 'access_container',
    'uri callback' => 'access_container_uri',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'cid',
      'bundle' => 'scheme',
      'label' => 'name',
    ),
    'bundle keys' => array(
      'bundle' => 'scheme',
    ),
    'bundles' => array(),
    'view modes' => array(
      'full' => array(
        'label' => t('Access container page'),
        'custom settings' => FALSE,
      ),
    ),
  );

  // Bundles are access schemes; some fields represent conditions for
  // considering an object to be a member of an access container.
  foreach (access_scheme_get_names() as $scheme => $name) {
    $types['access_container']['bundles'][$scheme] = array(
      'label' => $name,
      'admin' => array(
        'path' => 'admin/structure/access/manage/%access_scheme',
        'real path' => 'admin/structure/access/manage/' . str_replace('_', '-', $scheme),
        'bundle argument' => 4,
        'access arguments' => array('administer access control kit'),
      ),
    );
  }

  return $types;
}

/**
 * Entity URI callback; access container.
 */
function access_container_uri($container) {
  return array('path' => 'admin/structure/access/container/' . $container->cid);
}

/**
 * Returns a list of all defined access scheme names.
 *
 * @return
 *   An array of scheme names, keyed by machine name.
 */
function access_scheme_get_names() {
  return db_query('SELECT scheme, name FROM {access_scheme} ORDER BY scheme', array(), array('fetch' => PDO::FETCH_ASSOC));
}

/**
 * Returns the access scheme for a given container.
 *
 * @param $container
 *   An access container object, or an access scheme machine name string.
 *
 * @return
 *   A single access scheme object, or FALSE if not found.
 */
function access_scheme_get_scheme($container) {
  $scheme = is_object($container) ? $container->scheme : $container;
  return db_query('SELECT * FROM {access_scheme} WHERE scheme = :scheme', array(':scheme' => $scheme));
}

/**
 * Loads an access scheme by machine name.
 *
 * @param $scheme
 *   The machine-readable name of a scheme, where '_' is replaced with '-'.
 *
 * @return
 *   An access scheme object, or FALSE if $scheme does not exist.
 */
function access_scheme_load($scheme) {
  return access_scheme_get_scheme(strtr($scheme, array('-' => '_')));
}

/**
 * Implements hook_permission().
 */
function access_permission() {
  $perms['administer access control kit'] = array(
    'title' => t('Administer access control kit'),
    'description' => t('Add, edit, and delete access schemes and containers'),
    'restrict access' => TRUE,
  );
  return $perms;
}

/**
 * Implements hook_menu().
 */
function access_menu() {
//  $items['admin/structure/access/manage/%access_scheme'] = array();
//  $items['admin/structure/access/container/%access_container'] = array();
//  return $items;
}
